/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
    display: block;
}
body {
    line-height: 1;
}
ul, ol{
	margin: 1em 0 0.5em 0;
}
li {
	margin-bottom: 0.8em;
}
input{
	vertical-align: middle;
}
blockquote, q {
    quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
    content: '';
    content: none;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}


body {
    font-family: 'Open Sans', sans-serif;
    min-height: 740px;

    color: #333;
    background: #efefef;
}
.pull-left{
	float: left;
}
.pull-right{
	float: right;
}

/*
    Because the main point behind the impress.js demo is to demo impress.js
    we display a fallback message for users with browsers that don't support
    all the features required by it.

    All of the content will be still fully accessible for them, but I want
    them to know that they are missing something - that's what the demo is
    about, isn't it?

    And then we hide the message, when support is detected in the browser.
*/

.fallback-message {
    font-family: sans-serif;
    line-height: 1.3;

    width: 780px;
    padding: 10px 10px 0;
    margin: 20px auto;

    border: 1px solid #E4C652;
    border-radius: 10px;
    background: #EEDC94;
}

.fallback-message p {
    margin-bottom: 10px;
}

.impress-supported .fallback-message {
    display: none;
}


/*
    Now let's style the presentation steps.

    We start with basics to make sure it displays correctly in everywhere ...
*/

.step {
    position: relative;
    width: 960px;
    padding: 40px;
    margin: 20px auto;

    -webkit-box-sizing: border-box;
    -moz-box-sizing:    border-box;
    -ms-box-sizing:     border-box;
    -o-box-sizing:      border-box;
    box-sizing:         border-box;

    font-size: 28px;
    line-height: 1.5;
}

/*
    ... and we enhance the styles for impress.js.

    Basically we remove the margin and make inactive steps a little bit transparent.
*/
.impress-enabled .step {
    margin: 0;
    opacity: 0.3;

    -webkit-transition: opacity 1s;
    -moz-transition:    opacity 1s;
    -ms-transition:     opacity 1s;
    -o-transition:      opacity 1s;
    transition:         opacity 1s;
}

.impress-enabled .step.active { opacity: 1 }


h1, h2, h3, h4{

}

h1{
	font-size: 2em;
	font-weight: 300;
	text-shadow: 2px 2px 3px rgba(0,0,0,0.5);
	margin-bottom: 0.5em;
}
h2{
	font-size: 1.5em;
	font-weight: 400;
	margin-top: 0.5em;
}
h3{
	font-size: 1.3em;
	font-weight: 400;
	margin: 0.5em 0 0.5em 0;
}
h4{
	font-size: 1.0em;
	font-weight: 400;
	margin: 0.5em 0 0.5em 0;
}

p{
	font-size: 1em;
	margin: 0.5em 0 0.5em 0;
}

.nav li{
	font-size: 0.7em;
}
.nav a{
	text-decoration: none;
}
.nav{
	padding-left: 0;
	margin-bottom: 0;
}
.tab-content{
	padding-top: 0;
	background-color: #ffffff;
	border: 1px solid #ddd;
	border-top: none;
}
.muted{
	font-size: 0.8em;
	color: #666;
	margin: 0;
	clear:both;
}
#progressNum{
	margin: 15px;
}
.connected-viewers-number{
	font-size: 0.8em;
	color: #666;
}
.asq-welcome-screen{
	text-align: center;
}
.tab-pane{
	overflow: hidden;
}
.tab-pane form, .tab-pane p{
	margin-left: 20px;
}
.answersolutions ol{
	padding-left: 60px;
}
/*
    These 'slide' step styles were heavily inspired by HTML5 Slides:
    http://html5slides.googlecode.com/svn/trunk/styles.css

    ;)

    They cover everything what you see on first three steps of the demo.
*/
.slide {
    display: block;

    width: 900px;
    height: 700px;
    padding: 40px 60px;

    background-color: white;
    border: 1px solid rgba(0, 0, 0, .3);
    border-radius: 10px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, .1);

    color: rgb(102, 102, 102);
    text-shadow: 0 2px 2px rgba(0, 0, 0, .1);

    font-family: 'Open Sans', Arial, sans-serif;
    font-size: 30px;

    letter-spacing: -1px;
}

.slide q {
    display: block;
    font-size: 50px;
    line-height: 72px;

    margin-top: 100px;
}

.slide q strong {
    white-space: nowrap;
}

/*
    And as the last thing there is a workaround for quite strange bug.
    It happens a lot in Chrome. I don't remember if I've seen it in Firefox.

    Sometimes the element positioned in 3D (especially when it's moved back
    along Z axis) is not clickable, because it falls 'behind' the <body>
    element.

    To prevent this, I decided to make <body> non clickable by setting
    pointer-events property to `none` value.
    Value if this property is inherited, so to make everything else clickable
    I bring it back on the #impress element.

    If you want to know more about `pointer-events` here are some docs:
    https://developer.mozilla.org/en/CSS/pointer-events

    There is one very important thing to notice about this workaround - it makes
    everything 'unclickable' except what's in #impress element.

    So use it wisely ... or don't use at all.
*/
.impress-enabled          { pointer-events: none }
.impress-enabled #impress { pointer-events: auto }


#powered-by-asq{
    position: fixed;
    font-size: 0.85em;
    bottom: 20px;
    left: 10px;
    pointer-events: auto;
}

#powered-by-asq a{
    display: inline-block;
}

#powered-by-asq img{
    width: 80px;
    position: relative;
    top: 11px;
    left:4px;
}


/* Per slide */
body.impress-on-intro #powered-by-asq{
    display: block;
}

@media print {
 /* put styles for print here*/
    .step{
        page-break-before: always;
    }

    .step.no-page-break{
        page-break-before: avoid !important;
    }
}
